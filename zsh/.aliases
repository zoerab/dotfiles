# Basic stuff
alias cp="cp -i"
alias df="df -h"
alias dirs="dirs -v"
alias egrep="egrep --color=auto"
alias fgrep="fgrep --color=auto"
alias free="free -m"
alias grep="grep --color=auto"
alias htop="sudo htop"
alias less="less --RAW-CONTROL-CHARS"
alias ls="exa"
alias ll="ls -lahg --color=always --group-directories-first --extended"
alias lynx="lynx -vikeys"
alias mkdir="mkdir -p"
alias mtr="sudo mtr"
alias strings="strings -n 3"
alias mv="mv -i"
alias rm="rm -i"
alias tree="tree -a"
alias vi="nvim"
alias vim="nvim"
alias mvp="mpv"
alias restartplasma="kquitapp5 plasmashell && kstart5 plasmashell"

# Custom stuff
alias 4chandl="wget -qe robots=off -rHDi.4cdn.org -nc -nd -ERs.jpg,html --show-progress"
alias 1111="ping -c 4 1.1.1.1"
alias bt="wget http://cachefly.cachefly.net/100mb.test -O /dev/null"
alias extip="curl ipecho.net/plain; echo"
alias file-gitignore="wget -O .gitignore https://gist.githubusercontent.com/zoerab/ac336f006e952c6dbf01/raw/a5043364a4a4a3f0786d9702a3206770161f6fd1/.gitignore"
alias flushdns='sudo systemctl restart nscd'
function ouisearch() {
  curl -s -N "https://gitlab.com/wireshark/wireshark/-/raw/master/manuf" | grep -i "$1"
}

# Get TOP process eating CPU
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

# Get error messages from journalctl
alias jctl="sudo journalctl -p 3 -xb"

# Git
alias fuck="git reset --hard && git clean -df"
alias gaa="git add ."
alias gc="git commit -m "
alias ghist="git log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short"
alias ghistlog="git log --graph --full-history --all --color --pretty=format:'%x1b[31m%h%x09%x1b[32m %C(white)- %d%x1b[0m%x20%s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative"
alias gl="git log"
alias gp="git push"
alias gs="git status"

# Termbin
alias tb="nc termbin.com 9999"
alias tbc="nc termbin.com 9999 | xclip -selection clipboard"

# Copy/Paste
alias pbcopy="xclip -selection clipboard"
alias pbpaste="xclip -selection clipboard -o"

# yt-dlp
alias yt="yt-dlp --add-metadata"
alias yta-aac="yt-dlp --extract-audio --audio-format aac "
alias yta-best="yt-dlp --extract-audio --audio-format best "
alias yta-flac="yt-dlp --extract-audio --audio-format flac "
alias yta-m4a="yt-dlp --extract-audio --audio-format m4a "
alias yta-mp3="yt-dlp --extract-audio --audio-format mp3 "
alias yta-opus="yt-dlp --extract-audio --audio-format opus "
alias yta-vorbis="yt-dlp --extract-audio --audio-format vorbis "
alias yta-wav="yt-dlp --extract-audio --audio-format wav "
alias ytv-best="yt-dlp -f bestvideo+bestaudio "

# Add new ip host pair to /etc/hosts (ex.: addhost 127.0.0.1 host.domain.local)
function addhost() {
    if [[ "$1" && "$2" ]]; then
        IP=$1
        HOSTNAME=$2

        if [ -n "$(grep "$HOSTNAME" /etc/hosts)" ]; then
            echo "$HOSTNAME already exists:"
            echo "$(grep $HOSTNAME /etc/hosts)"
        else
            echo "Adding $HOSTNAME to your /etc/hosts"
            printf "%s\t%s\n" "$IP" "$HOSTNAME" | sudo tee -a /etc/hosts >/dev/null

            if [ -n "$(grep "$HOSTNAME" /etc/hosts)" ]; then
                echo "$HOSTNAME was added succesfully:"
                echo "$(grep $HOSTNAME /etc/hosts)"
            else
                echo "Failed to Add $HOSTNAME, Try again!"
            fi
        fi
    else
        echo "Error: missing required parameters."
        echo "Usage: "
        echo "  addhost ip domain"
    fi
}

# Check for unsigned kernel modules
function checkForUnsignedKernelMods() {
  for mod in $(lsmod | tail -n +2 | cut -d' ' -f1); do modinfo ${mod} | grep -q "signature" || echo "no signature for module: ${mod}" ; done
}

# Lookup JA3 SSL/TLS signature
function ja3lookup() {
    curl -s -X GET "https://ja3er.com/search/$1" | jq
}


# Showoff colors
function showcolors() {
  for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done
}

# Remove specified host from /etc/hosts
function removehost() {
    if [[ "$1" ]]; then
        HOSTNAME=$1

        if [ -n "$(grep "$HOSTNAME" /etc/hosts)" ]; then
            echo "$HOSTNAME Found in your /etc/hosts, Removing now..."
            sudo sed -i".bak" "/$HOSTNAME/d" /etc/hosts
        else
            echo "$HOSTNAME was not found in your /etc/hosts"
        fi
    else
        echo "Error: missing required parameters."
        echo "Usage: "
        echo "  removehost domain"
    fi
}

# Auto list files in directory once in it
function chpwd() {
    emulate -L zsh
    ll
}

# Cheatsheets FTW
function cheat() {
    curl cheat.sh/"$*"
}

# Extracting common file formats (by DT)
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

function extract {
 if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
 else
    for n in "$@"
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.cbt|*.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.cbr|*.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.cbz|*.epub|*.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.cb7|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.pkg|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *.cpio)      cpio -id < ./"$n"  ;;
            *.cba|*.ace)      unace x ./"$n"      ;;
            *)
                         echo "extract: '$n' - unknown archive method"
                         return 1
                         ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

# Scrap a site (beta)
function scrapsite() {
    wget -e robots=off --recursive --page-requisites --adjust-extension --span-hosts --convert-links --restrict-file-names=windows --domains "$1"--no-parent "$1"
}

IFS=$SAVEIFS

# Pretty CSV viewer
function pretty_csv {
    #column -t -s, -n "$@" | less -F -S -X -K
    perl -pe 's/((?<=,)|(?<=^)),/ ,/g;' "$@" | column -t -s, | less  -F -S -X -K
}

# Pretty TSV viewer
function pretty_tsv {
    perl -pe 's/((?<=\t)|(?<=^))\t/ \t/g;' "$@" | column -t -s $'\t' | less  -F -S -X -K
}

# Showing weather
function weather() {
    curl -4 "http://wttr.in/$1"
}
